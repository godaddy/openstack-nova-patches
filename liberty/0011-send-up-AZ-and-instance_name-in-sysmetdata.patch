diff --git a/nova/db/api.py b/nova/db/api.py
index d00aa1e..5a8b79d 100644
--- a/nova/db/api.py
+++ b/nova/db/api.py
@@ -33,6 +33,7 @@ from oslo_log import log as logging
 
 from nova.cells import rpcapi as cells_rpcapi
 from nova.i18n import _LE
+from nova.utils import metadata_to_dict
 
 
 db_opts = [
@@ -736,18 +737,45 @@ def instance_get_all_hung_in_rebooting(context, reboot_window):
     return IMPL.instance_get_all_hung_in_rebooting(context, reboot_window)
 
 
-def instance_update(context, instance_uuid, values, expected=None):
+def _create_instance_extra_metadata(context, instance):
+    meta = {}
+    system_metadata = metadata_to_dict(instance.get('system_metadata', []))
+
+    if 'instance_name' not in system_metadata:
+        meta['instance_name'] = instance['name']
+    if 'availability_zone' not in system_metadata:
+        if instance['host']:
+            aggregate_metadata = aggregate_metadata_get_by_host(
+                context, instance['host'], key='availability_zone')
+            if 'availability_zone' in aggregate_metadata:
+                az = list(aggregate_metadata['availability_zone'])[0]
+                meta['availability_zone'] = az
+    if meta:
+        instance_system_metadata_update(context, instance['uuid'], meta, False)
+
+
+def instance_update(context, instance_uuid, values, expected=None,
+                    update_cells=True):
     """Set the given properties on an instance and update it.
 
     Raises NotFound if instance does not exist.
 
     """
-    return IMPL.instance_update(context, instance_uuid, values,
-                                expected=expected)
+    rv = IMPL.instance_update(context, instance_uuid, values,
+                              expected=expected)
+    if update_cells:
+        if update_cells:
+            try:
+                _create_instance_extra_metadata(context, rv)
+                cells_rpcapi.CellsAPI().instance_update_at_top(context, rv)
+            except Exception:
+                LOG.exception(_LE("Failed to notify cells of instance update"))
+    return rv
 
 
 def instance_update_and_get_original(context, instance_uuid, values,
-                                     columns_to_join=None, expected=None):
+                                     columns_to_join=None, expected=None,
+                                     update_cells=True):
     """Set the given properties on an instance and update it. Return
     a shallow copy of the original instance reference, as well as the
     updated one.
@@ -763,6 +791,12 @@ def instance_update_and_get_original(context, instance_uuid, values,
     rv = IMPL.instance_update_and_get_original(context, instance_uuid, values,
                                                columns_to_join=columns_to_join,
                                                expected=expected)
+    if update_cells:
+        try:
+            _create_instance_extra_metadata(context, rv[1])
+            cells_rpcapi.CellsAPI().instance_update_at_top(context, rv[1])
+        except Exception:
+            LOG.exception(_LE("Failed to notify cells of instance update"))
     return rv
 
 
@@ -1638,6 +1672,7 @@ def bw_usage_update(context, uuid, mac, start_period, bw_in, bw_out,
             bw_out, last_ctr_in, last_ctr_out, last_refreshed=last_refreshed)
     if update_cells:
         try:
+            _create_instance_extra_metadata(context, rv)
             cells_rpcapi.CellsAPI().bw_usage_update_at_top(context,
                     uuid, mac, start_period, bw_in, bw_out,
                     last_ctr_in, last_ctr_out, last_refreshed)
diff --git a/nova/tests/unit/compute/test_compute.py b/nova/tests/unit/compute/test_compute.py
index 4b86b8d..0031a50 100644
--- a/nova/tests/unit/compute/test_compute.py
+++ b/nova/tests/unit/compute/test_compute.py
@@ -7811,6 +7811,7 @@ class ComputeAPITestCase(BaseTestCase):
                 'image_min_disk': '1',
                 'image_ramdisk_id': 'fake_ramdisk_id',
                 'image_something_else': 'meow',
+                'instance_name': u'instance-00000001',
                 'preserved': 'preserve this!'})
 
     def test_rebuild(self):
diff --git a/nova/tests/unit/db/test_db_api.py b/nova/tests/unit/db/test_db_api.py
index 089464c..1225464 100644
--- a/nova/tests/unit/db/test_db_api.py
+++ b/nova/tests/unit/db/test_db_api.py
@@ -2002,7 +2002,7 @@ class InstanceTestCase(test.TestCase, ModelsObjectComparatorMixin):
     def test_instance_update(self):
         instance = self.create_instance_with_args()
         metadata = {'host': 'bar', 'key2': 'wuff'}
-        system_metadata = {'original_image_ref': 'baz'}
+        system_metadata = {'instance_name': 'instance-00000001', 'original_image_ref': 'baz'}
         # Update the metadata
         db.instance_update(self.ctxt, instance['uuid'], {'metadata': metadata,
                            'system_metadata': system_metadata})

diff --git a/nova/cells/manager.py b/nova/cells/manager.py
index f2c04c2..5b4811f 100644
--- a/nova/cells/manager.py
+++ b/nova/cells/manager.py
@@ -38,6 +38,7 @@ from nova import manager
 from nova import objects
 from nova.objects import base as base_obj
 from nova.objects import instance as instance_obj
+from nova import quota
 
 cell_manager_opts = [
         cfg.StrOpt('driver',
@@ -49,7 +50,11 @@ cell_manager_opts = [
                         "or deleted to continue to update cells"),
         cfg.IntOpt("instance_update_num_instances",
                 default=1,
-                help="Number of instances to update per periodic task run")
+                help="Number of instances to update per periodic task run"),
+        cfg.BoolOpt("expire_reservations",
+                default=False,
+                help="If True, enable the periodic task for reservation "
+                     "expiry."),
 ]
 
 
@@ -58,6 +63,7 @@ CONF.import_opt('name', 'nova.cells.opts', group='cells')
 CONF.register_opts(cell_manager_opts, group='cells')
 
 LOG = logging.getLogger(__name__)
+QUOTAS = quota.QUOTAS
 
 
 class CellsManager(manager.Manager):
@@ -128,6 +134,11 @@ class CellsManager(manager.Manager):
         self.msg_runner.tell_parents_our_capacities(ctxt)
 
     @periodic_task.periodic_task
+    def _expire_reservations(self, context):
+        if CONF.cells.expire_reservations:
+            QUOTAS.expire(context)
+
+    @periodic_task.periodic_task
     def _heal_instances(self, ctxt):
         """Periodic task to send updates for a number of instances to
         parent cells.
